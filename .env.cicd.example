# Пример переменных окружения для CI/CD
# Скопируйте эти значения в GitHub Secrets

# ==============================================
# СЕРВЕРНЫЕ НАСТРОЙКИ
# ==============================================

# SSH ключ для подключения к серверу (содержимое файла ~/.ssh/ai-chat-bot-deploy)
SSH_PRIVATE_KEY=-----BEGIN OPENSSH PRIVATE KEY-----
# Вставьте здесь содержимое приватного SSH ключа
-----END OPENSSH PRIVATE KEY-----

# IP адрес или домен production сервера
SERVER_HOST=your-server.com

# Пользователь для SSH подключения (обычно 'deploy')
SERVER_USER=deploy

# ==============================================
# ПРИЛОЖЕНИЕ
# ==============================================

# Токен Telegram бота (получить у @BotFather)
BOT_TOKEN=1234567890:ABCdefGHIjklMNOpqrsTUVwxyz

# Telegram ID администратора (ваш ID)
ADMIN_TELEGRAM_ID=123456789

# API ключ OpenRouter (https://openrouter.ai/)
OPENROUTER_API_KEY=sk-or-v1-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

# Модель AI (по умолчанию)
OPENROUTER_MODEL=openai/gpt-4

# Секретный ключ для JWT (32+ случайных символов)
JWT_SECRET=your-super-secret-jwt-key-32-chars-min

# Ключ для шифрования данных (32+ случайных символов)
ENCRYPTION_KEY=your-encryption-key-32-chars-minimum

# ==============================================
# БАЗА ДАННЫХ
# ==============================================

# Имя базы данных
POSTGRES_DB=ai_chat_bot

# Пользователь PostgreSQL
POSTGRES_USER=postgres

# Пароль PostgreSQL (используйте надежный пароль)
POSTGRES_PASSWORD=your-strong-postgres-password

# Пароль Redis (опционально, можно оставить пустым)
REDIS_PASSWORD=your-redis-password

# ==============================================
# ДОПОЛНИТЕЛЬНЫЕ НАСТРОЙКИ
# ==============================================

# Уровень логирования (debug, info, warn, error)
LOG_LEVEL=info

# Максимальный размер файла в байтах (20MB по умолчанию)
MAX_FILE_SIZE=20971520

# Разрешенные типы файлов (через запятую)
ALLOWED_FILE_TYPES=txt,pdf,docx,jpg,jpeg,png,gif,webp

# ==============================================
# STAGING ОКРУЖЕНИЕ (опционально)
# ==============================================

# Те же переменные с префиксом STAGING_ для staging окружения
STAGING_SSH_PRIVATE_KEY=-----BEGIN OPENSSH PRIVATE KEY-----
# Тот же ключ или отдельный для staging
-----END OPENSSH PRIVATE KEY-----

STAGING_SERVER_HOST=staging-server.com
STAGING_SERVER_USER=deploy
STAGING_BOT_TOKEN=1234567890:STAGINGdefGHIjklMNOpqrsTUVwxyz
STAGING_ADMIN_TELEGRAM_ID=123456789
STAGING_OPENROUTER_API_KEY=sk-or-v1-staging-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
STAGING_OPENROUTER_MODEL=openai/gpt-3.5-turbo
STAGING_JWT_SECRET=staging-jwt-secret-32-chars-minimum
STAGING_ENCRYPTION_KEY=staging-encryption-key-32-chars-min
STAGING_POSTGRES_DB=ai_chat_bot_staging
STAGING_POSTGRES_USER=postgres
STAGING_POSTGRES_PASSWORD=staging-postgres-password
STAGING_REDIS_PASSWORD=staging-redis-password

# ==============================================
# УВЕДОМЛЕНИЯ (опционально)
# ==============================================

# Webhook URL для уведомлений в Slack
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/T00000000/B00000000/XXXXXXXXXXXXXXXXXXXXXXXX

# ==============================================
# ИНСТРУКЦИИ ПО ГЕНЕРАЦИИ СЕКРЕТОВ
# ==============================================

# Генерация JWT_SECRET и ENCRYPTION_KEY:
# node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"

# Или используйте онлайн генератор:
# https://www.random.org/strings/

# Получение Telegram ID:
# Напишите боту @userinfobot

# Получение токена бота:
# Напишите @BotFather в Telegram и создайте нового бота

# ==============================================
# БЕЗОПАСНОСТЬ
# ==============================================

# ВАЖНО:
# - Никогда не коммитьте этот файл с реальными значениями
# - Используйте надежные пароли
# - Регулярно обновляйте секреты
# - Ограничьте доступ к серверу только необходимыми IP
# - Используйте отдельные ключи для production и staging
